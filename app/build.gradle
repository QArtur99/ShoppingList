apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

allOpen {
    annotation 'com.artf.shoppinglist.testing.OpenClass'
}
android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.artf.shoppinglist"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'com.artf.shoppinglist.util.CustomTestRunner'
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        String debugDir = 'src/debug/java'
        main.java.srcDirs += debugDir
        test.java.srcDirs += sharedTestDir
        androidTest.java.srcDirs += sharedTestDir
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
        enabledForTests = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.support"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    implementation "androidx.preference:preference-ktx:$versions.preference"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"

    //Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    //Koin
    implementation "org.koin:koin-android:$versions.koin"
    implementation "org.koin:koin-androidx-scope:$versions.koin"
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"

    //Test
    testImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    testImplementation "androidx.test.ext:junit:$versions.atsl_junit"
    testImplementation "androidx.test:core:$versions.atsl_core"
    testImplementation "androidx.test:monitor:$versions.atsl_monitor"
    testImplementation "androidx.test:rules:$versions.atsl_rules"
    testImplementation "androidx.test:runner:$versions.atsl_runner"
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    testImplementation "org.mockito:mockito-core:$versions.mockito"

    //Android Test
    androidTestImplementation "androidx.annotation:annotation:$versions.androidx_annotation"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    androidTestImplementation "androidx.fragment:fragment-testing:$versions.fragment_testing"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.espresso"
    androidTestImplementation "androidx.test.ext:junit:$versions.atsl_junit"
    androidTestImplementation "androidx.test:core:$versions.atsl_core"
    androidTestImplementation "androidx.test:monitor:$versions.atsl_monitor"
    androidTestImplementation "androidx.test:rules:$versions.atsl_rules"
    androidTestImplementation "androidx.test:runner:$versions.atsl_runner"
    androidTestImplementation "com.google.truth:truth:$versions.truth"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito_android"
    androidTestImplementation "org.mockito:mockito-core:$versions.mockito"
    androidTestImplementation "org.robolectric:annotations:$versions.robolectric"
}

// we need all open to run tests which  a we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}
